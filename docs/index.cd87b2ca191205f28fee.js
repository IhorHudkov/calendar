(()=>{"use strict";let e;const t=document.getElementById("checkBoxes"),n=document.querySelectorAll("td");window.addEventListener("load",(()=>{const o=indexedDB.open("calendar",1);function r(t){const{currentTarget:n}=t,{target:o}=t,r=My$.modal({content:'\n\t\t\t<p>Are You sure You want to delete "Retrospective" event?</p>\n\t\t'});r.open();const a=document.querySelector("#yes"),s=document.querySelector("#no");a.addEventListener("click",(()=>{const t=Number(n.parentNode.getAttribute("id").match(/\d+/)),a=e.transaction(["events"],"readwrite");a.objectStore("events").delete(t),a.oncomplete=()=>{o.parentNode.parentNode.setAttribute("data-allowdrop","true"),o.parentNode.remove()},console.log("Delete!"),r.close(),r.destroy()})),s.addEventListener("click",(()=>{r.close(),r.destroy()}))}function a(t){const n=[];document.querySelectorAll('input[type="checkbox"]:checked').forEach((e=>{const t=document.querySelector(`label[for="${e.id}"`);n.push(t.textContent.trim())})),console.log(n);e.transaction("events").objectStore("events").openCursor().onsuccess=e=>{const o=e.target.result;if(o){const{participants:e}=o.value;if("all"===t||My$.arrCompare(e,n)){const e=o.value.dayTime;console.log(e);const t=`td[headers="${e}"]`;console.log(t);const n=document.querySelector(t);console.log(n),n.setAttribute("data-allowdrop","false");const a=document.createElement("div"),s=document.createElement("span"),c=document.createElement("span");a.setAttribute("id",`event-${o.value.id}`),a.setAttribute("draggable","true"),c.innerHTML="&times;",s.textContent=o.value.name,n.appendChild(a),a.appendChild(s),a.appendChild(c),a.classList.add("td-content"),c.classList.add("td__delete-btn"),c.onclick=r}o.continue()}else console.log("Notes all displayed")}}o.onupgradeneeded=()=>{e=o.result;const t=e.createObjectStore("events",{keyPath:"id",autoIncrement:!0});t.createIndex("name","name",{unique:!1}),t.createIndex("participants","participants",{unique:!1}),t.createIndex("dayTime","dayTime",{unique:!0}),console.log("Database setup complete")},o.onerror=()=>{console.error("Error",o.error)},o.onsuccess=()=>{function r(e){e.preventDefault()}function s(e){e.dataTransfer.setData("headers",e.currentTarget.getAttribute("headers"))}function c(t){const n=t.dataTransfer.getData("headers");t.target.appendChild(document.querySelector(`td[headers="${n}"]`).firstChild);const o=e.transaction(["events"],"readwrite"),r=o.objectStore("events"),a=r.index("dayTime").get(n);a.onsuccess=()=>{const e=a.result;e.dayTime=t.target.getAttribute("headers");r.put(e).onsuccess=()=>{console.log("DayTime is update!")}},o.oncomplete=()=>{console.log("Complete!")}}console.log("Database opened succesfully"),e=o.result,a("all"),t.addEventListener("closebox",(()=>{n.forEach((e=>{e.firstChild&&e.firstChild.remove()})),a()}),!1),n.forEach((e=>{e.setAttribute("data-allowdrop","true"),e.addEventListener("dragover",r),e.addEventListener("dragstart",s),e.addEventListener("drop",c)}))}}))})();